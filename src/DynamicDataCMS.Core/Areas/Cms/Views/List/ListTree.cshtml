@model ListTreeViewModel

@{
    ViewData["Title"] = Model.MenuCmsItem.Name + " Overview";
    string searchQuery = ViewBag.SearchQuery;
    var showItemType = Model.MenuCmsItem.SchemaKey == null && Model.MenuCmsItem.SchemaKeys.Count > 1;
}

<script type="text/javascript">
        var createUrl = '@Html.Raw(Url.Action("EditTree", "Edit", new { Area = "Cms", cmsTreeType = Model.CmsType }, this.Context.Request.Scheme))' + '/';
</script>

<h1>@Model.MenuCmsItem.Name Overview</h1>

@if (!Model.MenuCmsItem.HideUrl)
{
    <div class="form-inline bg-light">
        <div class="form-group mb-2 ml-1">
            <labe for="url">Create new</labe>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            <input type="text" id="url" placeholder="/url-slug" class="form-control-plaintext" />
        </div>
        <button class="btn btn-primary mb-2" onclick="window.location.href = createUrl + document.getElementById('url').value;">Create</button>
    </div>
}



<div class="row">
    <div class="col-sm">
        @if (Model.MenuCmsItem.SchemaKey != null)
        {
            <p>
                @Html.ActionLink("Create New " + @Model.MenuCmsItem.Name, "Create", "Edit", new { Area = "Cms", cmstype = Model.CmsType }, new { @class = "btn btn-primary", role = "button" })
            </p>
        }
    </div>
    <div class="col-sm">
    </div>
    <div class="col-sm">
        <!-- Search form -->
        <form class="form-inline d-flex justify-content-center md-form form-sm" id="searchForm">
            <input class="form-control form-control-sm mr-3 w-75" name="q" type="text" placeholder="Search"
                   aria-label="Search" value="@searchQuery">
            <i class="fas fa-search" aria-hidden="true" onclick="document.getElementById('searchForm').submit();"></i>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @(Model.MenuCmsItem.HideUrl ? "Title" : "Url")
            </th>
            @if (showItemType)
            {
                <th>
                    Type
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var treeItem in Model.CmsTreeItem.Nodes)
        {
            <tr>

                <td>
                    @if (Model.MenuCmsItem.HideUrl)
                    {
                        int level = treeItem.GetSlugArray(Model.CmsTreeItem.Nodes, new HashSet<Guid>()).Count;
                        @Html.Raw(string.Concat(Enumerable.Repeat("&nbsp;", level * 3))) @treeItem.Name
                    }
                    else
                    {
                        @treeItem.GetSlug(Model.CmsTreeItem.Nodes)
                    }
                </td>
                @if (showItemType)
                {
                    <td>
                        @treeItem.CmsItemType
                    </td>
                }
                <td>
                    @if (treeItem.CmsItemId.HasValue)
                    {
                        if (string.IsNullOrEmpty(treeItem.CmsItemType))
                        {
                            @Html.ActionLink("Edit", "EditTree", "Edit", new { Area = "Cms", cmsTreeType = Model.CmsType, slug = treeItem.GetSlug(Model.CmsTreeItem.Nodes).TrimStart('/'), treeItemSchemaKey = treeItem.CmsItemType }) <text> | </text>
                        }
                        else
                        {
                            @Html.ActionLink("Edit", "Edit", "Edit", new { Area = "Cms", cmsType = Model.CmsType, id = treeItem.CmsItemId, treeItemSchemaKey = treeItem.CmsItemType, treeNodeId = treeItem.NodeId }) <text> | </text>
                        }

                        @Html.ActionLink("Delete", "Delete", "Delete", new { Area = "Cms", id = treeItem.CmsItemId, cmstype = Model.CmsType, treeItemSchemaKey = treeItem.CmsItemType, treeNodeId = treeItem.NodeId })
                    }
                    else
                    {
                        @Html.ActionLink("Create", "EditTree", "Edit", new { Area = "Cms", cmsTreeType = Model.CmsType, slug = treeItem.GetSlug(Model.CmsTreeItem.Nodes).TrimStart('/'), treeItemSchemaKey = treeItem.CmsItemType })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
