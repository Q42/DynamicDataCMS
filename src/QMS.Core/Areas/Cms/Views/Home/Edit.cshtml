@model EditViewModel
@{
    ViewData["Title"] = Model.SchemaLocation.Name;
}

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/@@json-editor/json-editor@latest/dist/jsoneditor.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/dompurify@@latest/dist/purify.min.js"></script>

    <script type="text/javascript">
    var editor = null;
    (function () {
        JSONEditor.defaults.options.ajax = true;
        JSONEditor.defaults.options.theme = 'bootstrap4';
        JSONEditor.defaults.options.no_additional_properties = true;

         // Specify upload handler
        JSONEditor.defaults.options.upload = function (type, file, cbs) {
            console.log(type);
            var url = '@Url.Action("Images", "Upload", new { area = "cms", cmsType = Model.CmsType, id = Model.Id, lang = Model.Language })';
            url += '?fieldName=' + type.substr(5); //remote root. from typename
            var formData = new FormData();
            formData.set("file", file , file.name);

            fetch(url, { // Your POST endpoint
    method: 'POST',
    //headers: {
    //  // Content-Type may need to be completely **omitted**
    //  // or you may need something
    //  "Content-Type": "multipart/form-data"
    //},
    body: formData // This is your file object
  }).then(
    response => response.json() // if the response is a JSON object
  ).then(
      filename => { console.log(filename);  cbs.success(filename); } // Handle the success response object
  ).catch(
    error => console.log(error) // Handle the error response object
  );
          //var tick = 0;

          //var tickFunction = function() {
          //  tick += 1;
          //  console.log('progress: ' + tick);

          //  if (tick < 100) {
          //    cbs.updateProgress(tick);
          //    window.setTimeout(tickFunction, 50)
          //  } else if (tick == 100) {
          //    cbs.updateProgress();
          //    window.setTimeout(tickFunction, 500)
          //  } else {
          //    cbs.success('http://www.example.com/images/' + file.name);
          //  }
          //};

          //window.setTimeout(tickFunction);
      };

        // Initialize the editor
        editor = new JSONEditor(document.getElementById("editor_holder"), {
            iconlib: "fontawesome5",
            schema:
                @Html.Raw(Model.SchemaLocation.Schema.ToString())

        });

        @if (Model.Data != null)
        {
            <text>
            editor.on('ready',function() {
                editor.setValue(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Data)));
            });

            </text>
        }

        })();

    function save() {
        var data = editor.getValue();

        //console.log('saving');
        //alert(data);

        return fetch('@Url.Action("Save", "Api", new { area = "cms", cmsType = Model.CmsType, id = Model.Id, lang = Model.Language })', {
        method: 'POST', // *GET, POST, PUT, DELETE, etc.
        //mode: 'cors', // no-cors, cors, *same-origin
        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
        //credentials: 'same-origin', // include, *same-origin, omit
        headers: {
            'Content-Type': 'application/json',
            // 'Content-Type': 'application/x-www-form-urlencoded',
        },
        //redirect: 'follow', // manual, *follow, error
        //referrer: 'no-referrer', // no-referrer, *client
        body: JSON.stringify(data), // body data type must match "Content-Type" header
    })
    .then(response => response.json());
    }

        function load() {

            return fetch('@Url.Action("Load", "Api", new { area = "cms", cmsType = Model.CmsType, id = Model.Id, lang = Model.Language })', {
                method: 'GET', // *GET, POST, PUT, DELETE, etc.
                //mode: 'cors', // no-cors, cors, *same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                //credentials: 'same-origin', // include, *same-origin, omit
                //headers: {
                //    'Content-Type': 'application/json',
                //    // 'Content-Type': 'application/x-www-form-urlencoded',
                //},
                //redirect: 'follow', // manual, *follow, error
                //referrer: 'no-referrer', // no-referrer, *client
                //body: JSON.stringify(data), // body data type must match "Content-Type" header
            })
                .then(response => response.json())
                .then(data => {editor.setValue(data) });
        }

    </script>
}
<div>
    <h1 class="display-4">@Model.SchemaLocation.Name</h1>

    @if (Model.CmsConfiguration?.Languages?.Any() ?? false)
    {
<ul class="nav">
    <li class="nav-item">
        <a class="nav-link" href="@Url.Action("Edit", "Home", new { lang = "" })">Default Language</a>
    </li>
    @foreach (var lang in Model.CmsConfiguration.Languages)
    {
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("Edit", "Home", new { lang = @lang })">@lang</a>
        </li>
    }
</ul>
    }


    <button id="load" onclick="javascript:load()">Load</button>
    <button id="save" onclick="javascript:save()">Save</button>

    <div id='editor_holder'></div>

</div>
