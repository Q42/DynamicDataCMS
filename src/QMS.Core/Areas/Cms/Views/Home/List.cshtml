@inject QMS.Storage.Interfaces.IReadCmsItem readCmsItem;
@model ListViewModel

@{
    ViewData["Title"] = Model.Schema.Name + "List";

    string GetSortOrder(string field)
    {
        if(ViewBag.SortField == field)
        {
            if (ViewBag.SortOrder == "Asc")
                return "Desc";
        }

        return "Asc";
    }
}

<h1>@Model.Schema.Name List</h1>

<p>
    @Html.ActionLink("Create New " + @Model.CmsType, "Create", new { cmstype = Model.CmsType }, new { @class = "btn btn-primary", role = "button" })
</p>
<table class="table">
    <thead>
        <tr>
            @if (!Model.Schema.ListViewProperties.Any())
            {
                <th>
                    Id
                </th>
            }
            @foreach (var column in Model.Schema.ListViewProperties)
            {
                @if (readCmsItem.CanSort)
                {
                    <th>@Html.ActionLink(column.DisplayName, "List", "Home", new { sortField = column.Key, sortOrder = GetSortOrder(column.Key) })</th>
                }
                else
                {
                    <th>@column.DisplayName</th>
                }
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                @if (!Model.Schema.ListViewProperties.Any())
                {
                    <td>
                        @item.Id
                    </td>
                }
                @foreach (var column in Model.Schema.ListViewProperties)
                {
                    <td>@item.AdditionalProperties.FirstOrDefault(x => x.Key == column.Key).Value</td>
                }
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id, cmstype = item.CmsType }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id, cmstype = item.CmsType })
                </td>
            </tr>
        }
    </tbody>
</table>
