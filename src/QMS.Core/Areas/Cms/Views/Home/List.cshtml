@inject QMS.Storage.Interfaces.IReadCmsItem readCmsItem;
@model ListViewModel

@{
    ViewData["Title"] = Model.Schema.Name + " List";

    int TotalPages = (int)Math.Ceiling(decimal.Divide(Model.TotalPages, Model.PageSize));
    bool EnablePrevious = Model.CurrentPage > 1;
    bool EnableNext = Model.CurrentPage < TotalPages;
    string sortOrder = ViewBag.SortOrder;
    string sortField = ViewBag.SortField;

    string GetSortOrder(string field)
    {
        if(ViewBag.SortField == field)
        {
            if (ViewBag.SortOrder == "Asc")
                return "Desc";
        }

        return "Asc";
    }
}

<h1>@Model.Schema.Name List</h1>

<p>
    @Html.ActionLink("Create New " + @Model.CmsType, "Create", new { cmstype = Model.CmsType }, new { @class = "btn btn-primary", role = "button" })
</p>
<table class="table">
    <thead>
        <tr>
            @if (!Model.Schema.ListViewProperties.Any())
            {
                <th>
                    Id
                </th>
            }
            @foreach (var column in Model.Schema.ListViewProperties)
            {
                @if (readCmsItem.CanSort)
                {
                    <th>@Html.ActionLink(column.DisplayName, "List", "Home", new { sortField = column.Key, sortOrder = GetSortOrder(column.Key) })</th>
                }
                else
                {
                    <th>@column.DisplayName</th>
                }
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                @if (!Model.Schema.ListViewProperties.Any())
                {
                    <td>
                        @item.Id
                    </td>
                }
                @foreach (var column in Model.Schema.ListViewProperties)
                {
                    <td>@item.AdditionalProperties.FirstOrDefault(x => x.Key == column.Key).Value</td>
                }
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id, cmstype = item.CmsType }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id, cmstype = item.CmsType })
                </td>
            </tr>
        }
    </tbody>
</table>

@if(TotalPages > 1)
{ 

<nav aria-label="Page navigation">
    <ul class="pagination flex-wrap">
        <li class="page-item @(EnablePrevious ? " " : " disabled" )">
            <a asp-route-pageIndex="0" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField"
               class="page-link" aria-label="Frist">
                <span aria-hidden="true">|&lt;</span>
                <span class="sr-only">First</span>
            </a>
        </li>
        <li class="page-item @(EnablePrevious ? " " : " disabled" )">
            <a asp-route-pageIndex="@(Model.CurrentPage -2)" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField"
               class="page-link" aria-label="Next">
                <span aria-hidden="true">&lt;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
        @for (var i = 1; i <= TotalPages; i++)
        {
        <li class="page-item @(i == Model.CurrentPage ? " active" : "" )">
            <a asp-route-pageIndex="@(i-1)" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField" class="page-link">@i</a>
        </li>
        }
        <li class="page-item @(EnableNext ? " " : " disabled" )">
            <a asp-route-pageIndex="@(Model.CurrentPage)" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField"
               class="page-link" aria-label="Previous">
                <span aria-hidden="true">&gt;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        <li class="page-item @(EnableNext ? " " : " disabled" )">
            <a asp-route-pageIndex="@(TotalPages-1)" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField"
               class="page-link" aria-label="Last">
                <span aria-hidden="true">&gt;|</span>
                <span class="sr-only">Last</span>
            </a>
        </li>
    </ul>
</nav>
}
